# -*- coding: utf-8 -*-
"""GROW intern.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15Ca4PXQ59ktM20a5Lj-sprI7iW8M7Z20
"""

import yfinance as yf
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics
import matplotlib.pyplot as plt

stock_data = yf.download('AAPL', start='2021-01-01', end='2022-01-01')

stock_data = stock_data.dropna()

stock_data['MA_50'] = stock_data['Close'].rolling(window=50).mean()
stock_data['MA_200'] = stock_data['Close'].rolling(window=200).mean()
stock_data['PercentChange'] = stock_data['Close'].pct_change()

stock_data = stock_data.dropna()

features = ['Open', 'High', 'Low', 'Close', 'Volume', 'MA_50', 'MA_200', 'PercentChange']
target = 'Close'

X = stock_data[features]
y = stock_data[target]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))
print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))
print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))

next_day_features = X.tail(1)
next_day_prediction = model.predict(next_day_features)
print('Next day\'s predicted stock price:', next_day_prediction[0])

plt.figure(figsize=(10, 6))
plt.plot(y_test.values, label='Actual Price')
plt.plot(y_pred, label='Predicted Price')
plt.legend()
plt.show()